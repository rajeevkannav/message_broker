<%= form_for(@rule, remote: true) do |f| %>
    <div id="error_explanation"></div>
    <span>Do</span> <%= f.select :activity_id, MessageBroker::Activity.all.collect { |activity| [activity.name, activity.id] },
                                 {include_blank: false} %>
    <span>On</span>
    <%= f.select :target, [], {}, {class: 'rule_target'} %>
    <%= f.select :callback_duration, MessageBroker::Rule::CALLBACK_DURATION %>
    <%= f.select :event, [], {}, {class: 'rule_event'} %>
    <span>On the lapse of</span> <%= f.select :lapse_magnitude, 1..99 %> <%= f.select :lapse_unit, MessageBroker::Rule::LAPSE_UNIT %>
    <%= f.submit 'Add Rule' %>
<% end %>


<script>

    // Model Selection behaviour
    var model_methods_json = <%= raw model_list.to_json %>;

    function class_selection() {
        $('.rule_target').find('option').remove();
        $('.rule_target').append('<option value="">Target Class</option>');
        $.each(model_methods_json, function (key, value) {
            $('.rule_target').append($('<option></option>').attr("value", key).text(key));
        });
    }

    // Methods Selection behaviour
    $('.rule_target').on('change', function () {
        var _this = $(this)
        var target_obj = _this.parent('form').find('.rule_event')
        target_obj.find('option').remove();
        if (_this.val() == '') {
            target_obj.append('<option value="">Instance Method(s)</option>');
        } else {
            $.each(model_methods_json[_this.val()], function (index, value) {
                target_obj.append($("<option></option>").attr("value", value).text(value));
            });
        }
    })

    class_selection();
    $('.rule_target').trigger('change');
</script>
